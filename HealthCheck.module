<?php
/**
* @file
* A health check module for scanning CMI system and doing bulk processes to report and correct bad health indicators
* Auhtor: Alexis Harper
* Date: 5/3/19
 */

use Drupal\Core\Entity\EntityInterface;


/**
 * Implements HOOK_cron()
 * Runes processes at timed intervals
 */
function HealthCheck_cron(){    
    //if (date('G')==0 && date('i')==00 && date('l')=="Monday") { //runs every monday
        //Get all data products
        $config = \Drupal::config('HealthCheck.settings');
        $nids = \Drupal::entityQuery('node')->condition('type','product')->execute();
        $nodes = \Drupal\node\Entity\Node::loadMultiple($nids);

 \Drupal::logger('HealthChecker')->debug('reached 1', []);
        //check for Human block due to approvals/review
        foreach($nodes as $node){
            $epoch = $node->getChangedTime();
            $nodeDate = new DateTime("@$epoch");
            $currDate = new DateTime("now");
            switch($node->get('moderation_state')->getString()){
                case 'draft': //check drafts every month
                    break;
                case 'awaiting_project_lead_approval': //check lead approval every 2 weeks
                    $currDate->sub(new DateInterval('P14D')); //curent time plus 14 days ie two weeks
//temp removal due to constant modifications            if($currDate > $nodeDate){ //node needs action
                        \Drupal::logger('HealthChecker')->notice('ACTION NEEDED title: @title - Time: @time.',
                            array(
                                '@title' => $node->gettitle(),
                                '@time' => $nodeDate->format('Y-m-d'),
                        ));
                        approval_notify($node, $config);
//temp removal                    }
                    break;
                case 'awaiting_branch_head_approval': //check branch head approval every 2 weeks
                    break;
                case 'awaiting_publication': //check awaiting publication every 2 weeks
                    break;
                case 'published': //check existing content every 6 months
                    break;


            }
        }

        //}
}
/**
 * @alexharp
 *
 * FLOW:
 * set flag
 * assign responsible
 * add reason
 * send notification to view
 */
function approval_notify($node, $config){
 \Drupal::logger('HealthChecker')->debug('reached 1', []);
    if($config->get('HealthCheck.HUMAN_BLOCK') & $node->get('field_health_flags')){ //already has human block flag, check and add overdue
        if(!$config->get('HealthCheck.OVERDUE_ACTION') & $node->get('field_health_flags')) //if overdue not set, set it
            $node->set('field_health_flags', $node->get('field_health_flags') + $config->get('OVERDUE_ACTION'));
    } else {
 \Drupal::logger('HealthChecker')->debug('reached 2', []);
        $node->set('field_health_flags', $node->get('field_health_flags') + $config->get('HealthCheck.HUMAN_BLOCK'));

 \Drupal::logger('HealthChecker')->debug('reached 3', []);
        switch($node->get('moderation_state')->getString()){
            case 'awaiting_project_lead_approval': 
 \Drupal::logger('HealthChecker')->debug('reached 3.1', []);
                $node->set('field_health_remediater', $node->get('field_project_lead_')->getEntity());
 \Drupal::logger('HealthChecker')->debug('reached 3.1.1', []);
                break;
            case 'awaiting_branch_head_approval': 
 \Drupal::logger('HealthChecker')->debug('reached 3.2', []);
                $node->set('field_health_remediater', $node->get('field_please_select_your_branch_')->getEntity());
                break;
        }
 \Drupal::logger('HealthChecker')->debug('reached 4', []);
        $node->field_health_action[] = $config->get('HealthCheck.APR_REV_REQUIRED');  
        $node->field_health_action[] = $config->get('HealthCheck.REV_REQUIRED');  
 \Drupal::logger('HealthChecker')->debug('reached 5', []);
        $node->save();
    }
}
